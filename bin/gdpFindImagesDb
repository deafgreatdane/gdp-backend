#!/usr/bin/perl
# take list of images and filename prefixes on stdin
# and prompt for which of the disks it can be found on
use lib "/GDP/lib";
use strict;
use File::Copy;
use DBI;
use GDP::OrderDb;

my $dataDir = "/GDP/data/cdArchives";
my $outputDir = "/GDP/consolidate";


my $dbh = GDP::OrderDb::getDatabaseHandle();
my $sth = $dbh->prepare(qq{select image_number,dest_file from cart_consolidate});
$sth->execute();

my (@row,$imageNumber,$finalName);
my(@lines);
while( @row = $sth->fetchrow_array()) {
    my $path = {};
    my( $imageNumber,$finalName) = @row;
    if ( ! $imageNumber ) {
	next;
    }
    push(@lines,[$imageNumber,$finalName]);
}


######## CONFIGURATION
my $line;
my @matches;

while ( scalar(@lines) > 0 ) {
    my $nextDisc = "";
    my @remainderLines;
    my $copied = 0;
    foreach $line (@lines) {
	#print ($line->[0] . "---\n");
	
	my ( $imageNumber,$finalName ) = @$line;
	@matches = `grep $imageNumber $dataDir/*`;
	
	my $fileName;
	my $findLine;
	my $sourceDisc;
	if ( ! scalar(@matches)) {
	    print "$imageNumber $line not found on any disc\n";
	    next;
	} else {
	    $findLine = $matches[0];
	    chop($findLine);
	    my ($sourceDisc,$fileName) = split(/:/,$findLine);
	    #print $fileName . "+++\n";
	    $fileName =~ m:(\.[^.]*)$:;
	    my $outputFile = $finalName . $1;
	    if ( ! -e $outputFile ) {
		if ( -e $fileName ) {
		    print "$sourceDisc\n\t$fileName\n\t$outputFile\n";
		    copy($fileName,$outputFile);
		    my $sth = $dbh->prepare(qq{delete from cart_consolidate where image_number = '$imageNumber' and dest_file = '$finalName'});
		    $sth->execute();
		    $copied++;
		} else {
		    print "\t** $fileName not found on this disc ($outputFile) \n";
		    $nextDisc = $sourceDisc;
		    push(@remainderLines, $line);
		}
	    } else {
		print "already had $finalName\n";
		my $sth = $dbh->prepare(qq{delete from cart_consolidate where image_number = '$imageNumber' and dest_file = '$finalName'});
		$sth->execute();

	    }
	}
    }
    @lines = @remainderLines;
    print "did $copied , " . scalar(@remainderLines) . " to go\n";
    print "Next disc: $nextDisc\n";
    if ( isCdMounted() ) {
	`drutil eject`;
    }
    waitForCd();
}

sub waitForCd {
    while ( ! isCdMounted() ) {
	sleep(1);
    }
    sleep(2);
}

sub isCdMounted {
    my $found = 0;
    opendir(DIR, "/Volumes");
    my $fileName;
    while($fileName = readdir(DIR)) {
	next if $fileName =~ /^\./;
	next if $fileName =~ /HD/;
	$found = 1;
    }
    closedir(DIR);
    return $found;
}

