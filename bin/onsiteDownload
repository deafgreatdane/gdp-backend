#!/usr/bin/perl

package GDP;
use strict;

my(%ignoreVolumes);
#print getVolumes();
#promptVolume();
setupIgnoreVolumes();

my($allImages) = shift(@ARGV);
if ( $allImages ne "-all") {
    $allImages = '';
}

my($cartId);

# do it!
while (1) {
    my $candidate = waitForVolume();
    print "working on $candidate\n";
    print "what cart to download?\n";
    $cartId = <STDIN>;
    chomp($cartId);
    if ( $cartId =~ /^\d+$/ ) {
	system("collectDownload", $cartId ,"/Volumes/$candidate",$allImages);
    }

    print "eject it...\n";
    unmount($candidate);
	
    print "done\n";
}
sub unmount() {
    my $volume = shift;

    my $disk ;
    my $command;
    $command = "df -Hl | grep \"$volume\"";
    $disk = (split(/\s+/, `$command`))[0];
    print "unmounting $disk";
    system("diskutil unmount $disk");
    
}

sub waitForVolume() {
    my ($answer, $candidate, $count);
    my @candidates;
    print "waiting for media...\n";
    while(1) {
	@candidates = getVolumes();
	for $candidate (@candidates) {
	    if (! $ignoreVolumes{$candidate}) {
		return $candidate;
	    }
	}
	sleep(1);
    };
}
sub setupIgnoreVolumes {
    my ($answer, $candidate, $count);
    my @candidates;
    while(1) {
	@candidates = getVolumes();
	if ( scalar(@candidates) == 0 ) {
	    return;
	}
	print "The following are mounted volumes\n";
	$count = 1;
	for $candidate ( @candidates ) {
	    print "${count}: $candidate\n";
	}
	print "If you want to ignore these, enter \"I\"\n";
	print "otherwise, remove the media you don't want, and then hit return\n";

	$answer = <STDIN>;
	chomp($answer);
	if ( ! $answer ) {
	    # loop around
	    next;
	} elsif ( $answer  =~ /i/i ) {
	    for $candidate (@candidates ) {
		$GDP::ignoreVolumes{$candidate} = 1;
	    }
	    return;
	}
    };
    
}
sub promptVolume {
    my ($answer, $candidate, $count);
    my @candidates;
    while(1) {
	@candidates = getVolumes();
	if ( scalar(@candidates) == 0 ) {
	    print "no media mounted, press any key to continue";
	    $answer = <STDIN>;
	    continue;
	}
	$count = 1;
	for $candidate ( @candidates ) {
	    print "${count}: $candidate\n";
	}
	$answer = <STDIN>;
	chomp($answer);
	if ( ! $answer ) {
	    # loop around
	    next;
	} 
	print "YOU GO $answer!!!\n";
    };
}
sub getVolumes {
    my(@raw) = `df -Hl | grep Volume`;
    my @retval = ();
    for( @raw) {
	chomp;
	$_ =~ s:^.*/Volumes/::;
	push( @retval,$_) unless $GDP::ignoreVolumes{$_};
    }
    return @retval;
}
