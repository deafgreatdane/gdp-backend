#!/usr/bin/perl
use strict;
use File::Copy;

######## CONFIGURATION

# the shooter catalog contains the following:
# cameraPrefix:  images that begin with this will be processed with the rest of the info
# imagePrefix: the single character that these images get renumbered to
# rolloverCount: how many times the camera has rolled over
# rolloverThreshold: the lowest image number that will get this rolloverCount.  Images 
#   less than this amount will be upgraded to rolloverCount + 1
my $shooterCatalog = [  { "cameraPrefix" => "654E",
			  "imagePrefix" => "c",
			  "rolloverCount" => 4,
			  "rolloverThreshold" => 1000 },
			{ "cameraPrefix" => "DSC3_",
			  "imagePrefix" => "d",
			  "rolloverCount" => 101,
			  "rolloverThreshold" => 100 } ,
			{ "cameraPrefix" => "SN5K",
			  "imagePrefix" => "x",
			  "rolloverCount" => 13,
			  "rolloverThreshold" => 200 } ,
			{ "cameraPrefix" => "DF6R",
			  "imagePrefix" => "k",
			  "rolloverCount" => 202,
			  "rolloverThreshold" => 10 } ,
			{ "cameraPrefix" => "HMG_",
			  "imagePrefix" => "x",
			  "rolloverCount" => 9,
			  "rolloverThreshold" => 100 } ,
			{ "cameraPrefix" => "JAN_",
			  "imagePrefix" => "j",
			  "rolloverCount" => 42,
			  "rolloverThreshold" => 200 } 	,
			{ "cameraPrefix" => "KAR_",
			  "imagePrefix" => "g",
			  "rolloverCount" => 103,
			  "rolloverThreshold" => 50 } ,
			{ "cameraPrefix" => "NIC_",
			  "imagePrefix" => "n",
			  "rolloverCount" => 112,
			  "rolloverThreshold" => 50 } 	,
			{ "cameraPrefix" => "DSC_",
			  "imagePrefix" => "m",
			  "rolloverCount" => 312,
			  "rolloverThreshold" => 300 } 	,			  
			{ "cameraPrefix" => "CS7A",
			  "imagePrefix" => "r",
			  "rolloverCount" => 12,
			  "rolloverThreshold" => 500 } 	,	  
			{ "cameraPrefix" => "MIK_",
			  "imagePrefix" => "x",
			  "rolloverCount" => 1,
			  "rolloverThreshold" => 1 } 	,	  
			{ "cameraPrefix" => "AI9P",
			  "imagePrefix" => "s",
			  "rolloverCount" => 140,
			  "rolloverThreshold" => 300 } 	,	    
			{ "cameraPrefix" => "5J8C",
			  "imagePrefix" => "p",
			  "rolloverCount" => 40,
			  "rolloverThreshold" => 100 } 	,	
			{ "cameraPrefix" => "Friday_",
			  "imagePrefix" => "c",
			  "rolloverCount" => 200,
			  "rolloverThreshold" => 50 } 	,	
			{ "cameraPrefix" => "BO6I",
			  "imagePrefix" => "b",
			  "rolloverCount" => 201,
			  "rolloverThreshold" => 500 } 	,	
			{ "cameraPrefix" => "BK4I",
			  "imagePrefix" => "a",
			  "rolloverCount" => 318,
			  "rolloverThreshold" => 5 } 	,	

		     ];

########## validate inputs
my $workingDir = shift(@ARGV);

if ( ! $workingDir ) {
    die "usage; gdpFixImageNames directory\n";
}

######## do the work
my @directoriesTodo;
push( @directoriesTodo, $workingDir );
my $currentDir;
while ( $currentDir = shift(@directoriesTodo)) {

    # read the current directory contents
    print STDERR "doing $currentDir\n";
    if  ( ! opendir(DIR,"$currentDir") ) {
	print STDERR " could not open $currentDir\n";
	return;
    }
    my $choice;
    while( $choice = readdir(DIR)) {
	next if $choice =~ /^\./;
	next if $choice =~ /^_/;
	next if $choice =~ /.html/i;
	if ( -d "$currentDir/$choice" ) {
	    push(@directoriesTodo,"$currentDir/$choice");
	} else {
	    next if $choice !~ /.(jpg|tif|cr2|crw|nef)/i;
	    my $extension = "\L$1\E";
	    my $cameraInfo = getCameraInfo( $choice );
	    if ( ! $cameraInfo ) {
		print STDERR "no camera found for $choice\n";
		next;
	    }
	    $choice =~ m/....(\d\d\d\d)/i;
	    my $imageNumber = $1 + 0 ;

	    my $tmpRollover = $cameraInfo->{'rolloverCount'};
	
	    if ( $imageNumber < $cameraInfo->{'rolloverThreshold'} ) {
		print STDERR "ROLLED OVER $choice.  you may want to update the cameraInfo\n";
		$tmpRollover++;
	    }
	    my $newFileName = 
		$cameraInfo->{'imagePrefix'} . 
		sprintf("%03d%04d",$tmpRollover,$imageNumber) . 
		".$extension";
	    print STDERR "  $currentDir/$choice\t$newFileName\n";

            rename("$currentDir/$choice","$currentDir/$newFileName") || die("$!");
	}
    } 
    closedir(DIR);
}

sub getCameraInfo {
    my $imageName = shift;
    my $retval;
    foreach $retval ( @$shooterCatalog ) {
	if ( ! $retval->{'cameraPrefix'} ) {
	    next;
	}
	if ( $imageName =~ /^$retval->{'cameraPrefix'}/) {
	    return $retval;
	}
    }
}
